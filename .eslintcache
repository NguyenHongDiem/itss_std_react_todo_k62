[{"/home/runner/itssstdreacttodok63/src/index.js":"1","/home/runner/itssstdreacttodok63/src/App.js":"2","/home/runner/itssstdreacttodok63/src/reportWebVitals.js":"3","/home/runner/itssstdreacttodok63/src/components/Todo.js":"4","/home/runner/itssstdreacttodok63/src/components/Input.js":"5","/home/runner/itssstdreacttodok63/src/components/Filter.js":"6","/home/runner/itssstdreacttodok63/src/components/TodoItem.js":"7","/home/runner/itssstdreacttodok63/src/hooks/storage.js":"8","/home/runner/itssstdreacttodok63/src/lib/util.js":"9","/home/runner/itssstdreacttodok63/src/hooks/firebase.js":"10","/home/runner/itssstdreacttodok63/src/lib/firebase.js":"11"},{"size":500,"mtime":1655798012721,"results":"12","hashOfConfig":"13"},{"size":274,"mtime":1655798012721,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1655798012721,"results":"15","hashOfConfig":"13"},{"size":1910,"mtime":1655806745716,"results":"16","hashOfConfig":"13"},{"size":583,"mtime":1655805149867,"results":"17","hashOfConfig":"13"},{"size":908,"mtime":1655798012721,"results":"18","hashOfConfig":"13"},{"size":760,"mtime":1655798012721,"results":"19","hashOfConfig":"13"},{"size":675,"mtime":1655804457308,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1655798012721,"results":"21","hashOfConfig":"13"},{"size":563,"mtime":1655806776124,"results":"22","hashOfConfig":"13"},{"size":1132,"mtime":1655807359156,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8zyfg9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/home/runner/itssstdreacttodok63/src/index.js",[],["51","52"],"/home/runner/itssstdreacttodok63/src/App.js",[],"/home/runner/itssstdreacttodok63/src/reportWebVitals.js",[],"/home/runner/itssstdreacttodok63/src/components/Todo.js",["53","54","55"],"import React, { useState } from 'react';\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\nimport useFirebaseStorage from '../hooks/firebase';\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems, clearItems] = useFirebaseStorage();\n  \n  const [filter, setFilter] = React.useState('ALL');\n\n  const displayItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n  \n  const handleCheck = checked => {\n    const newItems = items.map(item => {\n      if (item.key === checked.key) {\n        item.done = !item.done;\n      }\n      return item;\n    });\n    putItems(newItems);\n  };\n  \n  const handleAdd = text => {\n    putItems([...items, { key: getKey(), text, done: false }]);\n  };\n  \n  const handleFilterChange = value => setFilter(value);\n\n  return (\n    <article class=\"panel is-danger\">\n      <div className=\"panel-heading\">\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <i class=\"fas fa-calendar-check\"></i>\n          </span>\n          <span> ITSS Todoアプリ</span>\n        </span>\n      </div>\n      <Input onAdd={handleAdd} />\n      <Filter\n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.key}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {displayItems.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </article>\n  );\n}\n\nexport default Todo;","/home/runner/itssstdreacttodok63/src/components/Input.js",[],"/home/runner/itssstdreacttodok63/src/components/Filter.js",["56","57","58"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/runner/itssstdreacttodok63/src/components/TodoItem.js",["59"],"import React, { useState } from 'react';\nimport '../styles/check.css';\n/* \n  【TodoItemコンポーネント】\n　・Todoアイテムを表示する\n　・チェックボックスにチェックが入っているか管理する\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\n*/\nfunction TodoItem(props) {\n  const [checked, setChecked] = React.useState(props.item.done);\n  const handleCheckBox = () => {\n    console.log('Long');\n    setChecked(!checked);\n  }\n  return (\n    <label className=\"panel-block\">\n      <input type=\"checkbox\" onClick={handleCheckBox} />\n            <p className={checked ? 'has-text-grey-light' : 'normal'}>{props.item.text}</p>\n    </label>\n  );\n}\n\nexport default TodoItem;","/home/runner/itssstdreacttodok63/src/hooks/storage.js",[],"/home/runner/itssstdreacttodok63/src/lib/util.js",[],"/home/runner/itssstdreacttodok63/src/hooks/firebase.js",[],"/home/runner/itssstdreacttodok63/src/lib/firebase.js",["60"],"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nconst firebaseConfig = { \n  apiKey : \"AIzaSyD4c6VqBP_Xkg3lWw58ECOUsFE1Qfa8xzg\" , \n  authDomain : \"fir-sample-76cad.firebaseapp.com\" , \n  projectId : \"fir-sample-76cad\" , \n  storageBucket : \"fir-sample-76cad.appspot.com\" , \n  messagingSenderId : \"1062038389602\" , \n  appId : \"1:1062038389602:web:2fefe1ece7bbd016ade23b\" \n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const getTodos = async () => { \n                                     const response = await firebase.firestore().collection(\"todos\").get()\n                                     console.log(response)\nreturn firebase.firestore().collection(\"todos\").get()\n}\nexport const addToFirebase = (item) => {\nfirebase.firestore().collection(\"todos\").add(item);\n}\n\nexport const updateTodo  =  (item) => {\n  firebase.firestore().collection(\"todos\").doc(item.id).update(item.done)\n}\n\nexport const deleteTodo = (item) => {\n  firebase.firestore().collection(\"todos\").doc(item.id).delete()\n\n}\n\nexport default  {\n  getTodos,\n  addToFirebase,\n  updateTodo,\n  deleteTodo\n}",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":9,"column":8,"nodeType":"67","messageId":"68","endLine":9,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":19,"column":42,"nodeType":"72","messageId":"73","endLine":19,"endColumn":44},{"ruleId":"74","severity":1,"message":"75","line":16,"column":7,"nodeType":"76","endLine":20,"endColumn":8},{"ruleId":"74","severity":1,"message":"75","line":21,"column":7,"nodeType":"76","endLine":25,"endColumn":8},{"ruleId":"74","severity":1,"message":"75","line":26,"column":7,"nodeType":"76","endLine":30,"endColumn":8},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":33,"column":1,"nodeType":"79","endLine":38,"endColumn":2},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useStorage' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]