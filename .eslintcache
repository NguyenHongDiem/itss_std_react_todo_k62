[{"G:\\itss_std_react_todo_k63\\src\\index.js":"1","G:\\itss_std_react_todo_k63\\src\\App.js":"2","G:\\itss_std_react_todo_k63\\src\\reportWebVitals.js":"3","G:\\itss_std_react_todo_k63\\src\\components\\Todo.js":"4","G:\\itss_std_react_todo_k63\\src\\components\\TodoItem.js":"5","G:\\itss_std_react_todo_k63\\src\\lib\\util.js":"6","G:\\itss_std_react_todo_k63\\src\\components\\Input.js":"7","G:\\itss_std_react_todo_k63\\src\\hooks\\storage.js":"8","G:\\itss_std_react_todo_k63\\src\\hooks\\fbstorage.js":"9","G:\\itss_std_react_todo_k63\\src\\components\\Filter.js":"10","G:\\itss_std_react_todo_k63\\src\\lib\\firebase.js":"11","G:\\itss_std_react_todo_k63\\src\\components\\Login.js":"12","G:\\itss_std_react_todo_k63\\src\\components\\Upload.js":"13"},{"size":517,"mtime":1654402553709,"results":"14","hashOfConfig":"15"},{"size":1654,"mtime":1656235552954,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1654402553710,"results":"17","hashOfConfig":"15"},{"size":2069,"mtime":1656232676659,"results":"18","hashOfConfig":"15"},{"size":627,"mtime":1656232676659,"results":"19","hashOfConfig":"15"},{"size":68,"mtime":1654402553709,"results":"20","hashOfConfig":"15"},{"size":822,"mtime":1654413014462,"results":"21","hashOfConfig":"15"},{"size":1008,"mtime":1654412238732,"results":"22","hashOfConfig":"15"},{"size":1105,"mtime":1656232676660,"results":"23","hashOfConfig":"15"},{"size":1108,"mtime":1654413051703,"results":"24","hashOfConfig":"15"},{"size":2805,"mtime":1656236227296,"results":"25","hashOfConfig":"15"},{"size":344,"mtime":1656234214922,"results":"26","hashOfConfig":"15"},{"size":1754,"mtime":1656235588305,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"mxg8vv",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"G:\\itss_std_react_todo_k63\\src\\index.js",[],["59","60"],"G:\\itss_std_react_todo_k63\\src\\App.js",[],"G:\\itss_std_react_todo_k63\\src\\reportWebVitals.js",[],"G:\\itss_std_react_todo_k63\\src\\components\\Todo.js",["61","62","63","64","65"],"import React, { useState ,useEffect } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\nimport useStorage from '../hooks/storage';\r\n\r\nimport useFbStorage from '../hooks/fbstorage';\r\n\r\n/* ライブラリ */\r\nimport {getKey} from \"../lib/util\";\r\n\r\n\r\nfunction Todo() {\r\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\r\n  console.log(items)\r\n\r\n  const [itemsfilter,setItemsfilter] = useState(items)\r\n  \r\n  const [check,setCheck] = useState(\"すべて\")\r\n\r\n  const handleDone = (checked) =>{\r\n    // const newItems = items.map(item => {\r\n    //   if(item.key === key){\r\n    //     item.done = !item.done\r\n    //   }\r\n    //   return item\r\n    // })\r\n\r\n    updateItem(checked);\r\n  }\r\n\r\n  const addTodo = (item) =>{\r\n    addItem(item)\r\n  }\r\n\r\n\r\n\r\n  const filter = (check) =>{\r\n    if(check === \"すべて\"){\r\n      return items\r\n    }else if(check === \"未完了\"){\r\n      return items.filter(item => item.done === false)\r\n    }else if(check === \"完了済み\"){\r\n      return items.filter(item => item.done === true)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"panel \">\r\n      <div className=\"panel-heading  has-background-danger\">\r\n        \r\n        <span className='has-text-white'>ITSS ToDoアプリ</span>\r\n  \r\n      </div>\r\n      <Input addTodo={addTodo}/>\r\n      <Filter filter={setCheck}/>\r\n      {filter(check).map(item => (\r\n        <TodoItem item={item} handleDone={handleDone}/>\r\n      ))}\r\n      <div className=\"panel-block\">\r\n        {filter(check).length} items\r\n      </div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","G:\\itss_std_react_todo_k63\\src\\components\\TodoItem.js",["66"],"/* \r\n  【TodoItemコンポーネント】\r\n　・Todoアイテムを表示する\r\n　・チェックボックスにチェックが入っているか管理する\r\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\r\n*/\r\nimport React, { useState } from 'react';\r\nfunction TodoItem({item,handleDone}) {\r\n\r\n  return (\r\n    <label className=\"panel-block \">\r\n        <input onClick={() => handleDone(item)} type=\"checkbox\" checked={item.done}/>\r\n        <span className={item.done ? \"has-text-grey-light\":\"\"}>{item.text}</span>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","G:\\itss_std_react_todo_k63\\src\\lib\\util.js",[],"G:\\itss_std_react_todo_k63\\src\\components\\Input.js",[],"G:\\itss_std_react_todo_k63\\src\\hooks\\storage.js",[],"G:\\itss_std_react_todo_k63\\src\\hooks\\fbstorage.js",["67"],"import { useState, useEffect } from 'react';\r\n\r\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\r\n\r\nfunction useFbStorage() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems();\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async item => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async checked => {\r\n    const changes = { done: !checked.done };\r\n    await updateFirebaseItem(changes, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item = { ...item, changes}\r\n      }\r\n      return item;\r\n    })\r\n    setItems(newItems);\r\n  }\r\n\r\n  const clearItems = () => {\r\n    items.map(item => {\r\n      clearFirebaseItem(item);\r\n    })\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFbStorage;","G:\\itss_std_react_todo_k63\\src\\components\\Filter.js",["68"],"/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nimport {useState} from \"react\";\r\n\r\nconst status = [\r\n  {\r\n    name:\"すべて\",\r\n    active:true,\r\n  },\r\n  {\r\n    name:\"未完了\",\r\n    active:false,\r\n  },\r\n  {\r\n    name:\"完了済み\",\r\n    active:false,\r\n  }\r\n\r\n];\r\n\r\n\r\nfunction Filter({filter}) {\r\n  const [filterstatus,setFilterstatus] = useState(status)\r\n\r\n  const onToggleStatus = (val) =>{\r\n    setFilterstatus(filterstatus.map(element => {\r\n      if(element.name === val.name){\r\n        element.active = true\r\n      }else{\r\n        element.active = false\r\n      }\r\n      return element;\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n      {filterstatus.map(element => \r\n        <a key={element.name} className={element.active ? \"is-active\" :\"\"} onClick={() => {onToggleStatus(element);filter(element.name)}}>{element.name}</a>  \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","G:\\itss_std_react_todo_k63\\src\\lib\\firebase.js",[],"G:\\itss_std_react_todo_k63\\src\\components\\Login.js",[],"G:\\itss_std_react_todo_k63\\src\\components\\Upload.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"78","line":16,"column":8,"nodeType":"76","messageId":"77","endLine":16,"endColumn":18},{"ruleId":"74","severity":1,"message":"79","line":21,"column":9,"nodeType":"76","messageId":"77","endLine":21,"endColumn":15},{"ruleId":"74","severity":1,"message":"80","line":28,"column":10,"nodeType":"76","messageId":"77","endLine":28,"endColumn":21},{"ruleId":"74","severity":1,"message":"81","line":28,"column":22,"nodeType":"76","messageId":"77","endLine":28,"endColumn":36},{"ruleId":"74","severity":1,"message":"82","line":7,"column":17,"nodeType":"76","messageId":"77","endLine":7,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":36,"column":20,"nodeType":"85","messageId":"86","endLine":36,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":43,"column":9,"nodeType":"89","endLine":43,"endColumn":139},{"ruleId":"90","severity":1,"message":"91","line":27,"column":11,"nodeType":"89","endLine":27,"endColumn":33},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useStorage' is defined but never used.","'getKey' is defined but never used.","'itemsfilter' is assigned a value but never used.","'setItemsfilter' is assigned a value but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]