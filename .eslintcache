[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9"},{"size":500,"mtime":1617866493374,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1617866493374,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1617866493374,"results":"13","hashOfConfig":"11"},{"size":2000,"mtime":1617874498337,"results":"14","hashOfConfig":"11"},{"size":664,"mtime":1617871780902,"results":"15","hashOfConfig":"11"},{"size":792,"mtime":1617873464783,"results":"16","hashOfConfig":"11"},{"size":887,"mtime":1617893846434,"results":"17","hashOfConfig":"11"},{"size":655,"mtime":1617866493374,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1617866493374,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vh3dly",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["42","43"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["44","45","46"],"import React, { useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport { getKey } from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems] = React.useState([\n    /* テストコード 開始 */\n    { key: getKey(), text: '日本語の宿題', done: false },\n    { key: getKey(), text: 'reactを勉強する', done: false },\n    { key: getKey(), text: '明日の準備をする', done: false },\n    /* テストコード 終了 */\n  ]);\n\n  const [filter, setFilter] = React.useState('ALL');\n\n  const filteredItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n\n  const handleFilter = (value) => {\n    setFilter(value);\n  }\n\n  const handleCheck = (checkedItem) => {\n    const newItems = items.map(item => {\n      if (item.key === checkedItem.key) {\n        item.done = !item.done;\n      }\n      return item;\n    });\n\n    putItems(newItems);\n  }\n\n  const handleAdd = (text) => {\n    putItems([...items, { key: getKey(), text: text, done: false }]);\n  }\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n      \n      <Input onAdd={handleAdd}/>\n      \n      <Filter \n        onChange={handleFilter}\n        value={filter}\n      />\n      \n      {filteredItems.map(item => (\n        <TodoItem \n          key={item.key}\n          item={item} \n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {filteredItems.length} items\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["47"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input({ onAdd }) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  }\n\n  return (\n    <div className=\"panel-block\">\n      <input \n        className=\"input\" \n        type=\"text\" \n        placeholder=\"Enter to add new item\"\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["48","49","50"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",["51","52"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    \n  }, []);\n\n  const putItems = items => {\n    \n  };\n\n  const clearItems = () => {\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":16,"column":8,"nodeType":"59","messageId":"60","endLine":16,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":32,"column":43,"nodeType":"64","messageId":"65","endLine":32,"endColumn":45},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":15,"column":5,"nodeType":"68","endLine":19,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":20,"column":5,"nodeType":"68","endLine":24,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":25,"column":5,"nodeType":"68","endLine":29,"endColumn":6},{"ruleId":"57","severity":1,"message":"69","line":12,"column":7,"nodeType":"59","messageId":"60","endLine":12,"endColumn":18},{"ruleId":"57","severity":1,"message":"70","line":15,"column":17,"nodeType":"59","messageId":"60","endLine":15,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useStorage' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'STORAGE_KEY' is assigned a value but never used.","'setItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]