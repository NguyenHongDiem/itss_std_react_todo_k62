[{"/home/runner/itssstdreacttodok63/src/index.js":"1","/home/runner/itssstdreacttodok63/src/App.js":"2","/home/runner/itssstdreacttodok63/src/reportWebVitals.js":"3","/home/runner/itssstdreacttodok63/src/components/Todo.js":"4","/home/runner/itssstdreacttodok63/src/components/TodoItem.js":"5","/home/runner/itssstdreacttodok63/src/components/Input.js":"6","/home/runner/itssstdreacttodok63/src/components/Filter.js":"7","/home/runner/itssstdreacttodok63/src/hooks/storage.js":"8","/home/runner/itssstdreacttodok63/src/lib/util.js":"9"},{"size":500,"mtime":1655971573139,"results":"10","hashOfConfig":"11"},{"size":274,"mtime":1655971573139,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1655971573139,"results":"13","hashOfConfig":"11"},{"size":2133,"mtime":1655971573139,"results":"14","hashOfConfig":"11"},{"size":906,"mtime":1655971573139,"results":"15","hashOfConfig":"11"},{"size":647,"mtime":1655971573139,"results":"16","hashOfConfig":"11"},{"size":910,"mtime":1655971573139,"results":"17","hashOfConfig":"11"},{"size":910,"mtime":1655971573139,"results":"18","hashOfConfig":"11"},{"size":68,"mtime":1655971573139,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8zyfg9",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/runner/itssstdreacttodok63/src/index.js",[],["44","45"],"/home/runner/itssstdreacttodok63/src/App.js",[],"/home/runner/itssstdreacttodok63/src/reportWebVitals.js",[],"/home/runner/itssstdreacttodok63/src/components/Todo.js",["46","47"],"import React, { useEffect, useState } from 'react';\n\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\nimport useStorage from '../hooks/storage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, putItems, clearItems] = useStorage();\n  // const [items, putItems] = React.useState([\n  //     /* テストコード 開始 */\n  //   { key: getKey(), text: '日本語の宿題', done: false },\n  //   { key: getKey(), text: 'reactを勉強する', done: true },\n  //   { key: getKey(), text: '明日の準備をする', done: false },\n  //   /* テストコード 終了 */\n  // ]);\n\n  const [displayItems, setDisplayItems] = useState(items)\n  // 0: 全て, 1: 未完了, 2: 完了済み\n  const [optionFilter, setOptionFilter] = useState(0)\n\n  const addItem = (text) => {\n    let newItem = {key: getKey(), text, done: false}\n    putItems([...items, newItem])\n  }\n\n  useEffect(() => {\n    let newDisplayItems = items.filter(x => {\n      if (optionFilter == 0) {\n        return true\n      }\n      if (optionFilter == 1) {\n        return !x.done\n      }\n\n      return x.done\n    })\n\n    setDisplayItems(newDisplayItems)\n  }, [items, optionFilter])\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n\n      <Input setData={(text) => addItem(text)} />\n\n      <Filter option={optionFilter} setOption={setOptionFilter} />\n\n      {displayItems.map(item => (\n        <TodoItem key={item.key} item={item} data={items} setData={putItems} />\n      ))}\n\n      <div className=\"panel-block\">\n        {displayItems.length} items\n      </div>\n\n      <div className='panel-block'>\n        <button className='button is-fullwidth' onClick={() => clearItems()}>全てのToDoを削除</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","/home/runner/itssstdreacttodok63/src/components/TodoItem.js",[],"/home/runner/itssstdreacttodok63/src/components/Input.js",["48"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input({ setData }) {\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      setData(e.target.value)\n      e.target.value = ''\n    }\n  }\n\n  return (\n    <div className=\"panel-block\">\n      <input placeholder='ToDoを入力してください' className='input' type=\"text\" onKeyDown={(e) => handleKeyDown(e)}/>\n    </div>\n  );\n}\n\nexport default Input;\n","/home/runner/itssstdreacttodok63/src/components/Filter.js",["49","50","51","52"],"import { useState } from \"react\";\n\n/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ option, setOption }) {\n  \n  const handleChangeOption = (newOption) => {\n    setOption(newOption)\n  }\n\n  return (\n    <div className=\"panel-tabs\">\n      <div className=\"tabs is-centered\">\n        <ul>\n          <li className={option === 0? \"is-active\": \"\"} onClick={() => handleChangeOption(0)}><a>全て</a></li>\n          <li className={option === 1? \"is-active\": \"\"} onClick={() => handleChangeOption(1)}><a>未完了</a></li>\n          <li className={option === 2? \"is-active\": \"\"} onClick={() => handleChangeOption(2)}><a>完了済み</a></li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter","/home/runner/itssstdreacttodok63/src/hooks/storage.js",["53"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n\n  // get data from local storage\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if (items) {\n     setItems(items);\n    }\n  }, []);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    localStorage.setItem('items', JSON.stringify(items));\n  }, [items]);\n\n  const putItems = items => {\n    setItems(items)\n  };\n\n  const clearItems = () => {\n    setItems([])\n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;","/home/runner/itssstdreacttodok63/src/lib/util.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":42,"column":24,"nodeType":"62","messageId":"63","endLine":42,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":45,"column":24,"nodeType":"62","messageId":"63","endLine":45,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":19,"column":95,"nodeType":"70","endLine":19,"endColumn":98},{"ruleId":"68","severity":1,"message":"69","line":20,"column":95,"nodeType":"70","endLine":20,"endColumn":98},{"ruleId":"68","severity":1,"message":"69","line":21,"column":95,"nodeType":"70","endLine":21,"endColumn":98},{"ruleId":"64","severity":1,"message":"71","line":12,"column":7,"nodeType":"66","messageId":"67","endLine":12,"endColumn":18},{"ruleId":"56","replacedBy":"72"},{"ruleId":"58","replacedBy":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'STORAGE_KEY' is assigned a value but never used.",["74"],["75"],"no-global-assign","no-unsafe-negation"]