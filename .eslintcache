[{"D:\\ITSS\\itss_std_react_todo_k62\\src\\index.js":"1","D:\\ITSS\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"2","D:\\ITSS\\itss_std_react_todo_k62\\src\\App.js":"3","D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"5","D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\Filter.js":"6","D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\Input.js":"7","D:\\ITSS\\itss_std_react_todo_k62\\src\\lib\\util.js":"8","D:\\ITSS\\itss_std_react_todo_k62\\src\\hooks\\storage.js":"9"},{"size":517,"mtime":1617853561142,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1617853561144,"results":"12","hashOfConfig":"11"},{"size":291,"mtime":1617853561107,"results":"13","hashOfConfig":"11"},{"size":2402,"mtime":1618281381026,"results":"14","hashOfConfig":"11"},{"size":717,"mtime":1618238047147,"results":"15","hashOfConfig":"11"},{"size":1287,"mtime":1618200988511,"results":"16","hashOfConfig":"11"},{"size":974,"mtime":1618198861502,"results":"17","hashOfConfig":"11"},{"size":68,"mtime":1617853561143,"results":"18","hashOfConfig":"11"},{"size":687,"mtime":1617853561107,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"e7sju4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"D:\\ITSS\\itss_std_react_todo_k62\\src\\index.js",[],["43","44"],"D:\\ITSS\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"D:\\ITSS\\itss_std_react_todo_k62\\src\\App.js",[],"D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\Todo.js",["45","46"],"D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",["47"],"import React, { useState } from 'react';\r\n/* \r\n  【TodoItemコンポーネント】\r\n　・Todoアイテムを表示する\r\n　・チェックボックスにチェックが入っているか管理する\r\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\r\n*/\r\nfunction TodoItem( {item, onItemClick}  ) {\r\n  const classNameAdded = item.done ? \"panel-block has-text-grey-light\" : \"panel-block\";\r\n  return (\r\n   <label className={classNameAdded} >\r\n      <input \r\n        type=\"checkbox\" \r\n        onClick = { () => onItemClick(item)}\r\n        defaultChecked = {item.done? true:false}\r\n      />\r\n      {item.text}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\Filter.js",["48"],"import React, { useState } from 'react';\r\n/* \r\n  【Filterコンポーネント】\r\n　・該当するTodoをステータス毎にで分けてリスト表示する\r\n　・タブで表示する\r\n　・サポートするステータスは「すべて」「未完了」「完了済み」\r\n*/\r\nfunction Filter({ onFilterClick }) {\r\n  const [filterElements, setFilter] = useState([\r\n    { id: 1, text: '全て', isActive: true },\r\n    { id: 2, text: '未完了', isActive: false },\r\n    { id: 3, text: '完了済み', isActive: false },\r\n  ])\r\n\r\n  const handleFilter = (element) => {\r\n    let newItems = [];\r\n    \r\n    for (const item of filterElements) {\r\n      if (item.id === element.id) {\r\n        item.isActive = true;\r\n      }\r\n      else {\r\n        item.isActive = false;\r\n      }\r\n      newItems.push(item);\r\n      console.log(item.id)\r\n    }\r\n    \r\n    setFilter(newItems);\r\n    onFilterClick(element);\r\n  }\r\n\r\n  return (\r\n    <div className=\"panel-tabs\">\r\n    {\r\n      filterElements.map((element,key) => (\r\n        <a \r\n          href='#'\r\n          key={key}\r\n          onClick={() => handleFilter(element)}\r\n          className={element.isActive ? 'is-active' : ''}\r\n        >\r\n          {element.text}\r\n        </a>\r\n      ))\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","D:\\ITSS\\itss_std_react_todo_k62\\src\\components\\Input.js",["49"],"import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\n /*\r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input({onEnterInput}) {\r\n  const [newItem, setNewItem] = useState(\"\");\r\n  \r\n  const setInput = (event) => {\r\n    setNewItem(event.target.value);\r\n  } \r\n\r\n  const handleSubmit = (event) => {\r\n    if (event.key === \"Enter\" || event.keyCode === 13) {\r\n      console.log(\"enter\");\r\n      onEnterInput(newItem);\r\n      setNewItem(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n       <input \r\n        class=\"input\" \r\n        type=\"text\" \r\n        placeholder=\"Todoを入力してください\" \r\n        value={newItem}\r\n        onKeyPress={handleSubmit}\r\n        onChange={setInput}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","D:\\ITSS\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"D:\\ITSS\\itss_std_react_todo_k62\\src\\hooks\\storage.js",["50","51"],"import { useState, useEffect } from 'react';\r\n\r\n/* \r\n  【Storageフック】\r\n　・TodoをlocalStorageを使って保存する\r\n　・以下機能をサポートする\r\n　  - localstrageに保存されているすべてのTodoの読み出し機能\r\n　  - Todoをlocalstrageに保存する\r\n　  - localstrageにあるTodoを削除する\r\n*/\r\n\r\nconst STORAGE_KEY = 'itss-todo';\r\n\r\nfunction useStorage() {\r\n  const [items, setItems] = useState([]);\r\n　\r\n　/* 副作用を使う */\r\n  useEffect(() => {\r\n    \r\n  }, []);\r\n\r\n  const putItems = items => {\r\n    \r\n  };\r\n\r\n  const clearItems = () => {\r\n    \r\n  };\r\n\r\n  return [items, putItems, clearItems];\r\n}\r\n\r\nexport default useStorage;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":16,"column":8,"nodeType":"58","messageId":"59","endLine":16,"endColumn":18},{"ruleId":"60","severity":1,"message":"61","line":63,"column":22,"nodeType":"62","messageId":"63","endLine":63,"endColumn":24},{"ruleId":"56","severity":1,"message":"64","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":37,"column":9,"nodeType":"67","endLine":42,"endColumn":10},{"ruleId":"56","severity":1,"message":"68","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":12},{"ruleId":"56","severity":1,"message":"69","line":12,"column":7,"nodeType":"58","messageId":"59","endLine":12,"endColumn":18},{"ruleId":"56","severity":1,"message":"70","line":15,"column":17,"nodeType":"58","messageId":"59","endLine":15,"endColumn":25},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useStorage' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Todo' is defined but never used.","'STORAGE_KEY' is assigned a value but never used.","'setItems' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]